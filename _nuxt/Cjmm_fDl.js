import{s as b,y as d,r as y,z as x,A as B,B as O,C as E,D as H,E as h,G as M,j as S,H as V,I as z,o as I,c as N,v as R}from"./DduXzU7M.js";import{_ as j}from"./DlAUqK2U.js";const G=t=>t==="defer"||t===!1;function Q(...t){var m;const r=typeof t[t.length-1]=="string"?t.pop():void 0;typeof t[0]!="string"&&t.unshift(r);let[s,u,a={}]=t;if(typeof s!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof u!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const e=b(),g=u,w=()=>d.value,P=()=>e.isHydrating?e.payload.data[s]:e.static.data[s];a.server=a.server??!0,a.default=a.default??w,a.getCachedData=a.getCachedData??P,a.lazy=a.lazy??!1,a.immediate=a.immediate??!0,a.deep=a.deep??d.deep,a.dedupe=a.dedupe??"cancel";const f=a.getCachedData(s,e),p=f!=null;if(!e._asyncData[s]||!a.immediate){(m=e.payload._errors)[s]??(m[s]=d.errorValue);const o=a.deep?y:x;e._asyncData[s]={data:o(p?f:a.default()),pending:y(!p),error:B(e.payload._errors,s),status:y("idle"),_default:a.default}}const n={...e._asyncData[s]};delete n._default,n.refresh=n.execute=(o={})=>{if(e._asyncDataPromises[s]){if(G(o.dedupe??a.dedupe))return e._asyncDataPromises[s];e._asyncDataPromises[s].cancelled=!0}if(o._initial||e.isHydrating&&o._initial!==!1){const i=o._initial?f:a.getCachedData(s,e);if(i!=null)return Promise.resolve(i)}n.pending.value=!0,n.status.value="pending";const l=new Promise((i,c)=>{try{i(g(e))}catch(_){c(_)}}).then(async i=>{if(l.cancelled)return e._asyncDataPromises[s];let c=i;a.transform&&(c=await a.transform(i)),a.pick&&(c=T(c,a.pick)),e.payload.data[s]=c,n.data.value=c,n.error.value=d.errorValue,n.status.value="success"}).catch(i=>{if(l.cancelled)return e._asyncDataPromises[s];n.error.value=M(i),n.data.value=S(a.default()),n.status.value="error"}).finally(()=>{l.cancelled||(n.pending.value=!1,delete e._asyncDataPromises[s])});return e._asyncDataPromises[s]=l,e._asyncDataPromises[s]},n.clear=()=>K(e,s);const v=()=>n.refresh({_initial:!0}),C=a.server!==!1&&e.payload.serverRendered;{const o=V();if(o&&!o._nuxtOnBeforeMountCbs){o._nuxtOnBeforeMountCbs=[];const c=o._nuxtOnBeforeMountCbs;O(()=>{c.forEach(_=>{_()}),c.splice(0,c.length)}),E(()=>c.splice(0,c.length))}C&&e.isHydrating&&(n.error.value||f!=null)?(n.pending.value=!1,n.status.value=n.error.value?"error":"success"):o&&(e.payload.serverRendered&&e.isHydrating||a.lazy)&&a.immediate?o._nuxtOnBeforeMountCbs.push(v):a.immediate&&v();const l=z();if(a.watch){const c=H(a.watch,()=>n.refresh());l&&h(c)}const i=e.hook("app:data:refresh",async c=>{(!c||c.includes(s))&&await n.refresh()});l&&h(i)}const D=Promise.resolve(e._asyncDataPromises[s]).then(()=>n);return Object.assign(D,n),D}function K(t,r){r in t.payload.data&&(t.payload.data[r]=void 0),r in t.payload._errors&&(t.payload._errors[r]=d.errorValue),t._asyncData[r]&&(t._asyncData[r].data.value=void 0,t._asyncData[r].error.value=d.errorValue,t._asyncData[r].pending.value=!1,t._asyncData[r].status.value="idle"),r in t._asyncDataPromises&&(t._asyncDataPromises[r]&&(t._asyncDataPromises[r].cancelled=!0),t._asyncDataPromises[r]=void 0)}function T(t,r){const s={};for(const u of r)s[u]=t[u];return s}const F={},L={class:"loading"};function U(t,r){return I(),N("div",L,r[0]||(r[0]=[R('<div class="loading-text" data-v-c3979c5a><span class="loading-text-words" data-v-c3979c5a>L</span><span class="loading-text-words" data-v-c3979c5a>O</span><span class="loading-text-words" data-v-c3979c5a>A</span><span class="loading-text-words" data-v-c3979c5a>D</span><span class="loading-text-words" data-v-c3979c5a>I</span><span class="loading-text-words" data-v-c3979c5a>N</span><span class="loading-text-words" data-v-c3979c5a>G</span></div>',1)]))}const W=j(F,[["render",U],["__scopeId","data-v-c3979c5a"]]);export{W as _,Q as u};
